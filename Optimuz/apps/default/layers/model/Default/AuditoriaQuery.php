<?php



/**
 * Skeleton subclass for performing query and update operations on the 'auditoria' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.6.4 on:
 *
 * Tue Sep 23 16:17:59 2014
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.Communikame
 */
class AuditoriaQuery extends BaseAuditoriaQuery {
	/**
	 * Cria um objeto de consulta para filtrar a tabela de auditoria em busca de
	 * registros de um tipo específico.
	 * @param int $tipoRegistro Indica qual registro buscar na tabela de
	 * auditoria. Os valores possíveis são representados pelas constantes da
	 * classe <code>Auditoria</code> (<code>Auditoria::TIPO_*</code>).
	 * @param int $registroId (opcional) ID do registro específico relacionado
	 * às mensagens que devem ser retornadas. Se for informado, apenas mensagens
	 * deste registro serão retornadas. Caso contrário, todas as mensagens do
	 * tipo indicado serão retornadas.
	 * @param string $mensagem (opcional) Este parâmetro serve como filtro para
	 * retornar apenas mensagens que contenham o texto especificado. Pode ser
	 * informado também com %, onde neste caso o filtro será transformado em um
	 * LIKE.
	 * @return AuditoriaQuery Retorna um objeto de consulta com os filtros
	 * aplicados.
	 * @static
	 */
	public static function getMensagens($tipoRegistro, $registroId = null, $mensagem = null)
	{
		$query = self::create('a')
			->filterByTipo($tipoRegistro)
			->_if(!empty($mensagem))
				->filterByMensagem($mensagem, Text::find('%', $mensagem) ? Criteria::LIKE : Criteria::EQUAL)
			->_endif()
			->_if(!empty($registroId))
				->filterByRegistroId($registroId)
			->_endif()
			->orderBy('a.Data');
		
		return $query;
	}
	
	/**
	 * Cria um objeto de consulta para localizar mensagens do histórico de
	 * determinado registro.
	 * @param int $tipoRegistro Indica qual registro buscar na tabela de
	 * auditoria. Os valores possíveis são representados pelas constantes da
	 * classe <code>Auditoria</code> (<code>Auditoria::TIPO_*</code>).
	 * @param int $registroId ID do registro específico relacionado às mensagens
	 * que devem ser retornadas.
	 * @return AuditoriaQuery Retorna um objeto de consulta com os filtros
	 * aplicados.
	 * @static
	 */
	public static function getHistorico($tipoRegistro, $registroId)
	{
		return self::create('a')
			->filterByTipo($tipoRegistro)
			->filterByRegistroId($registroId)
			->orderByData(Criteria::DESC)
			->orderById(Criteria::DESC);
	}
} // AuditoriaQuery
